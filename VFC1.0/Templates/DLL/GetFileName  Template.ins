;  IRL FlowCode Version: Beta Version 3.6 - October 1997
;  c1995-1998: Visual FlowCoder and FlowCode is a tradename of FlowLynx / Ublige 
;
;  File Name : GetFileName  Template.ins
;  File Date : 05:45:32 AM - 20:Jan:1999


input(//BEGIN_INSECTA_TEMPLATE  );//
event(//MAP_VARIABLE $name=GetFileNameENTER: Enter the new DLL's name);//
event(//MAP_VARIABLE $key=dll_vc4.keyENTER: Verify the keyfile.  Use dll_vc4.key for MSVC++ 4.x  OR dll_vc6.key for Visual Studio 6.0);//
set(//SET_LANGUAGE_KEY    $key);//
set(//SET_INSECTA_FILENAME $name.ins );//
set(//SET_EXPORT_FILENAME  $name.c);//
end( //END_INSECTA_TEMPLATE );// 

input(/* includes */);//FILE: export.ins
generic(#include <windows.h>);//  
set(#include <commdlg.h>);//
set(#include <stdio.h> );//
set(#include <sys\types.h>);//
set(#include <sys\stat.h>);//
set();// #include "MyDLL_h.h"

input(/* defines */);//

input(/* globals */);//
set(HWND OwnerWindow = NULL;);//
set(HINSTANCE hInst=NULL;);//

input(/* prototypes */);//
set(BOOL WINAPI DllMain (HINSTANCE hDLL, DWORD dwReason, LPVOID lpReserved) ;  );//
set(void GetFileName(  HWND hWnd, char * filename, char * exten, char * prompt) ;);//  
end();//

input(void main() {  );//
end( } //end main() );// 

input(void $name(  HWND hWnd, char * filename, char * exten, char * prompt) {);//  
generic(OPENFILENAME OpenFileName;);//  
generic(char DefName[258];);//  
set(char   choice_buffer[1000];);//
generic(strcpy(filename,""););//  
process(wsprintf(choice_buffer,   "Record File: %s;\0%s;\0" , filename , exten ););//
generic(wsprintf( DefName, "*.%s", exten ););//  
generic();//  Fill in the OPENFILENAME structure to support a template and hook. 
branch();//
path();//
generic(OpenFileName.lStructSize = sizeof(OPENFILENAME););//  
generic(OpenFileName.hwndOwner = hWnd;);//  
generic(OpenFileName.hInstance = hInst;);//  
generic(OpenFileName.lpstrFilter = NULL ;);//  
generic(OpenFileName.lpstrCustomFilter = NULL;);//  
generic(OpenFileName.nMaxCustFilter = 40;);//  
generic(OpenFileName.nFilterIndex = 0;);//  
generic(OpenFileName.lpstrFile =   DefName;);//  
generic(OpenFileName.nMaxFile = sizeof(filename););//  
generic(OpenFileName.lpstrFileTitle = filename;);//  
generic(OpenFileName.nMaxFileTitle = 255;);//  
generic(OpenFileName.lpstrInitialDir = NULL;);//  
generic(OpenFileName.lpstrTitle = prompt;);//  
generic(OpenFileName.nFileOffset = 0;);//  
generic(OpenFileName.nFileExtension = 0;);//  
generic(OpenFileName.lpstrDefExt = exten ;);//  
generic(OpenFileName.lCustData = (LPARAM) NULL;);//  
generic(OpenFileName.lpfnHook = NULL;);//  
generic(OpenFileName.lpTemplateName = NULL;);//  
generic(OpenFileName.Flags = OFN_SHOWHELP | OFN_EXPLORER;);//  
bend();//
generic();//  Call the common dialog function. 
branch(  if ( !GetOpenFileName(&OpenFileName)));//
path({);//  
path(}else{ );//
generic(MessageBox( hWnd , "File open dialog did not open. Resources may be too low." , "File Open Failure", 0 ););//  
bend(}  );//
end(});//  

input(BOOL WINAPI DLLMain (HINSTANCE hDLL, DWORD dwReason, LPVOID lpReserved){);//  
set(hInst = hDLL;);//
branch( if( dwReason == DLL_PROCESS_ATTACH ));//
path({);//
process();//MessageBox( OwnerWindow, "DLL MyDLL attached", " Generic DLL", MB_OK);
path(}else{);//
bend(});//
branch( if( dwReason == DLL_PROCESS_DETACH ));//
path({);//
process();//MessageBox( OwnerWindow, "DLL MyDLL detached", " Generic DLL", MB_OK);
path(}else{);//
bend(});//
end(return TRUE;});//  



;INSECTA EMBEDDED SESSION INFORMATION
; 255 16777215 65280 16777088 16711680 255 10198015 0 255 255 65535 65280 0
;    ;   //   //
; INSECTA
;INSECTA EMBEDDED ALTSESSION INFORMATION
; 642 497 744 434 3 100   370   86    template.key  0