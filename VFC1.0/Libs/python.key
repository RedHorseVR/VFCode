[POSTEXPORTCOMMAND]


cmd /k XSD2DART.bat

[]
cmd /c black <ExportFileName>.py

[COMPILE_BUTTON]
cmd /K  ipython -i <ExportFileName>.py

[BUILD_BUTTON]
pythonw <ExportFileName>.py
pyrun.bat  <ExportFileName>.py




cmd /k ipython  <ExportFileName>.py

[RUN_BUTTON]
cmd /k python <ExportFileName>.py 

cmd.exe /C cls &  pythonW <ExportFileName>.py 


[TOOLS]

SEPARATOR
C:\Users\luisr\VFC_WORK\PYTHON_VFCtreeTool\VFCtreeTool.bat <ExportFileName>.py.vfc |OBJECT EXPLORER
SEPARATOR

cmd /c "designer.exe <ExportFileName>.ui"|QT DESINGER <ExportFileName>.ui


cmd /c "designer.exe Ui_Resources.ui"|QT DESINGER <UI_Resources.ui>


CONSOLE:
cmd /c mkdir <ExportFileName>
SEPARATOR
cmd  
SEPARATOR

SEPARATOR
CMD /C  BLACK <ExportFileName>.py & BLACK _<ExportFileName>.py & WinMergeU.exe <ExportFileName>.py _<ExportFileName>.py  |DIFF
SEPARATOR
SEPARATOR
notepad run.bat
RUN.BAT <ExportFileName>.py 
SEPARATOR
cmd /c black <ExportFileName>.py  & timeout 5 |BLACK
SEPARATOR



[VARIABLES]
global
global psi
global RUNNING
key = -1
{
RUNNING = True;
RUNNING = False;
}

os.system(r"<VFCTRACK>");input();
i = 0
i +=1
global 
x = 0
y = 0
counter = 0
counter = counter+1
L = 
img = 

[INPUT]

def get_line_number(): $|$ return inspect.currentframe().f_lineno

def
os.system(r"<VFCTRACK>");    
os.system(r"<VFCTRACK>"); input();
## IMPORTS
?def
def  function():   $|$return
def  foo():   $|$  
class  myClass()  :  $|$#end class -------------
def  member ( self ):  $|$return
def  member ( self ):  $|$
def  __init__( self ):   $|$  
def  __del__( self ):   $|$  
def main():$|$
def main():
def MAIN():
def MAIN(): $|$

def die():$|$
def get_ipython_line_number():$|$return inspect.currentframe().f_back.f_lineno$|$

[EVENT]
import
import inspect

import json
import colorama ; colorama.init(); from colorama import Fore, Back, Style
import 
import llm
import pandas as pd
import numpy as np 
import matplotlib 
import re
import os
import sys
import time
import cv2
import random
import inspect

os.system(r"<VFCTRACK>");    
from MainWindow.py import Ui_MainWindow
from Ui_Resources  import Ui_MainWindow
from colorama import Fore, Style, init; init();

os.system(r"<VFCTRACK>");input();


from  something   import  something
from matplotlib import pyplot as plt
import keras
#MAIN

VFCTRACK=r"TRACKING ... <VFC> "+__file__+'.vfc -Goto '+str(get_ipython_line_number());VFCTRACK=VFCTRACK.replace('\\','/');print( VFCTRACK );

VFCTRACE=r"<VFC> " +  __file__ + '.vfc -Goto ' +  str( get_ipython_line_number() ); VFCTRACE=VFCTRACE.replace('\\','/');os.system(  VFCTRACE ) 
BREAK=r"<VFC> "+__file__+'.vfc -Goto '+str(get_ipython_line_number()); BREAK=BREAK.replace('\\','/');os.system(BREAK);input("program break" ) 



[PROCESS]
colorama.init()
string = string.split( '.' )
strings = doc.split( '\n' )

key = cv2.waitKeu(0)
key = cv2.waitKeu(1)
key = cv2.waitKeu(100)

os.system(r"<VFCTRACK>");    
f=open(  config_file  , 'r' ) ; print( f.read() ); f.close();

os.system(r"<VFCTRACK>");input();
main
from keras.models import Sequential
from keras.layers import Dense
model.fit(   )
model.compile(   )
model.add(    )
score = model.evaluate(   )
super().__init__();
super( Worker , self).__init__(*args, **kwargs)

print("")
img = cv2.imread('OBJ_L_7.png', 0)
plt.imshow(img, cmap = 'gray', interpolation = 'bicubic')
plt.xticks( ), plt.yticks( )  # to hide tick values on X and Y axis
plt.show( )

self.member()

main()
MAIN()

[SET]

data = read_file.read()
current_line = inspect.currentframe().f_back.f_lineno
sys.path.append("..");
os.system(r"<VFCTRACK>");    
''' --------------------------------------------
-------------------------------------------- '''
img.append(  )
L.append( )

Data = np.load('GroupOutput_raw.npy') 

img  = J.astype(np.uint8)
x = np.array( x )
y = np.array( y )
os.system(r"<VFCTRACK>");input();
self.
model = Sequential()
self.value
i += 1
N = 10
Index = range(1, N)
Index = range(1,100)
A = np.array( [ (1, 2, 3), (5, 6, 7)])
#----
ReadFile = open( "demofile.txt" , "r")
WriteFile = open( "demofile.txt" , "w")

chars = ReadFile.read(5)
line = ReadFile.readline()
ReadFile.close()
WriteFile.write( "new data" )
WriteFile.close()
write_file.write( "data" )
data = read_file.read()
write_file.close()
read_file.close()
""" # Developer: Luis Lopez --------------------------------------------
#----
'''

[OUTPUT]
pass
 mylog.error(f'Error in custom function processFiles: {str(e)}')
print( f"VFC2000 {__file__}-Goto {inspect.currentframe().f_lineno-5}" );
logger.info(f'VFCLINK:  ' , vfclink=True )

print( "\n\tIMPORTING --->", __file__ ,"\n");
print( "IMPORTING --->", __file__ );
print( "FILE --->', __file__ );
#include "include.txt"

raise Expection( "Key Item Error" );

os.system(r"<VFCTRACK>");    
os.system(r"<VFCTRACK>");input();
os.system(r"<VFCTRACK>");print("DEBUG: " + str( 1 ) + ": PAUSED - HIT RTN" ); input();
os.system(r"<VFCTRACK>");

print( Fore.YELLOW + "----------------------------------" +  Style.RESET_ALL )
print( Fore.RED + "----------------------------------" +  Style.RESET_ALL )
print( Fore.GREEN + "----------------------------------" +  Style.RESET_ALL )
print( Fore.BLUE + "----------------------------------" +   Style.RESET_ALL )
print( Fore.YELLOW + "RUNNING TEST ..." ,   Style.RESET_ALL )
print( Fore.YELLOW + "--------------DONE----------------" +   Style.RESET_ALL )
print( Fore.GREEN  + "--------------DONE----------------" +  Style.RESET_ALL )

print( Fore.RED + "ERROR:  " +  Style.RESET_ALL )
print( Fore.RED + "EXCEPTION:", e,'' +   Style.RESET_ALL )
print( Fore.YELLOW + '' , end =''  )
print( Fore.GREEN + '' , end ='' )
print( Fore.BLUE + '' , end ='' )
print( Fore.RED + '', end ='' )
print( Style.RESET_ALL    )


print(  )
print( i )
print( 'execption' )
print( 'exception', e )
print( '------------------------------------------------')
print( '----------DONE----------')
freeze_support()

[LOOP]
for rec in records:  $|$
for
while
os.system(r"<VFCTRACK>");    
os.system(r"<VFCTRACK>");input();

while key != -1  :$|$
while key != 32  :$|$
while key != 13  :$|$

while   :$|$
for      :$|$
for i in range( 1, 5 ):$|$

for j in range( 0, 10 ):$|$

while i in range( 0 , N ):$|$
while j in range( 0 , M ):$|$
for   col in range( 0 , COLS ):$|$
for   row in range( 0 , ROWS ):$|$
for   x in range( 0 , X ):$|$
for   y in range( 0 , Y ):$|$
for   i in range( 0 , N )  : $|$
for   j in range( 0 , M )  : $|$
for   k in range( 0 , len( M ) )  : $|$
while     :
for       :



[LEND]


[BRANCH]
if __name__ == '__main__':
if
os.system(r"<VFCTRACK>");    
os.system(r"<VFCTRACK>");input();
""" THIS ... $|$INPUTS: $|$RETURNS: $|$ """
if __name__ == '__main__':$|$$|$
 $|$ $|$ $|$ $|$
 with $|$
 #LEARNING$|$#DATA$|$#MODEL$|$#TRAIN$|$#EVALUATE$|$
if     :$|$
if  isinstance(  , list )   :$|$
if  isinstance(  , dict )   :$|$
if key == ord('q'):$|$
if   :$|$ $|$else: $|$
if filename==""  :$|$ $|$else: $|$
if   :$|$ $|$elif  : $|$else: $|$
if   :$|$ $|$elif  : $|$elif  : $|$else: $|$
#try-catch-exception$|$try:$|$except :$|$
#try-catch-exception$|$try:$|$except Exception as e:$|$
if '.h5' in filename:$|$$|$else:$|$
# object class $|$# attributes $|$# methods $|$ 

with open( 'file.txt' , 'r' ) as read_file : $|$
with open( 'file.txt' , 'w' ) as write_file : $|$
with open( 'test.csv' , 'r' ) as csv: $|$


[PATH]
except Exception as e :

os.system(r"<VFCTRACK>");    
os.system(r"<VFCTRACK>");input();
else:
elif(   ):
elif     :
elif key== ord(' '):




[BEND]



[END]
os.system(r"<VFCTRACK>");    
os.system(r"<VFCTRACK>");input();
return
exit
break
continue
os._exit( 0 )
return None;
return True;
return False;

BREAK=r"<VFC> "+__file__+'.vfc -Goto '+str(get_ipython_line_number()); BREAK=BREAK.replace('\\','/');os.system(BREAK);input("program break" ) 



[HELP_BUTTON]
chrome "https://realpython.com/qt-designer-python/#getting-started-with-qt-designer"

"C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe" "https://docs.conda.io/projects/conda/en/4.6.0/_downloads/52a95608c49671267e40c689e0bc00ca/conda-cheatsheet.pdf" |Conda Cheat Sheet

https://realpython.com/qt-designer-python/#installing-and-running-qt-designer


[TOOLS]


ipyuic5.bat Ui_Resource

cmd /c  "pyuic5.exe Ui_Resources.ui -o Ui_Resources.py -x & PAUSE"|COMPILE    Ui_Resources.ui
	SEPARATOR

"C:\Users\luis.lopez\Programs\Qt Designer\designer.exe" |QT DESIGNER
cmd /c "pyrcc5 resource.qrc -o resource_rc.py & PAUSE" |COMPILE QRC FILE

	SEPARATOR
"C:\Users\luis.lopez\Programs\Qt Designer\designer.exe" MainWindow.ui |QT DESIGNER   MainWindow.ui
cmd /c "pyuic5.exe MainWindow.ui -o MainWindow.py -x & PAUSE" |COMPILE    MainWindow.ui

<ExportFileName>.py
black _<ExportFileName>.py

notepad++ pyrun.bat
CMD



[HELP]

chrome https://realpython.com/qt-designer-python/#installing-and-running-qt-designer
chrome https://docs.python.org/3/library/index.html  |Python library index

"C:\Program Files\Internet Explorer\IEXPLORE.EXE" "https://asd.gsfc.nasa.gov/Rodrigo.Nemmen/Rodrigo_Nemmens_Homepage/Links_files/ipython_quickref.pdf"|IPYTHON QUICK REFERENCE
"C:\Program Files\Internet Explorer\IEXPLORE.EXE" "https://www.learnpyqt.com/courses/qt-creator/first-steps-qt-creator/" |QT PYTHON TUTORIALS

"C:\Program Files\Internet Explorer\IEXPLORE.EXE"  https://docs.w3cub.com/tensorflow~python/tf/keras/|TENSORFLOW KERAS

"C:\Program Files\Internet Explorer\IEXPLORE.EXE"  http://www.python.org |Python.org
"C:\Program Files\Internet Explorer\IEXPLORE.EXE"  https://docs.python.org/3/ |Python 3.7 Ref 
---------------------------SEPARATOR
"C:\Program Files\Internet Explorer\IEXPLORE.EXE" https://docs.scipy.org/doc/numpy/reference/routines.help.html  |SciPy Ref 
"C:\Program Files\Internet Explorer\IEXPLORE.EXE" https://opencv-python-tutroals.readthedocs.io/en/latest/ |OpenCV
---------------------------SEPARATOR
"C:\Windows\hh.exe" C:\Anaconda3\spinnaker\docs\PySpinDoc.chm  |PySpin Help
"C:\Program Files\Internet Explorer\IEXPLORE.EXE" C:\Anaconda3\spinnaker\docs\PySpinDoc.pdf |PySpin Doc


[CASE_SENSITIVE]
[MATCH_ORDER]
[COMMENTS]
#
.
[] Begin Misc KeyFile Comments

	LANGUAGE KEYWORD AND IMPORT FILTER FILE:

		RESERVED CHARACTERS:   '[' , ']' , '|' , '*' ~ ONLY IN THE FIRST COLUMN

		RESERVED KEYWORDS INCLUDE THE '[]' CHARACTERS AND CAN BE SEEN BELOW WITHIN '[]'

		GUIDLINES:
			ONLY 40 ENTRIES ARE CURRENLY ALLOWED PER ITEM	

			DO NOT START THIS FILE WITH A BLANK LINE
			
			DO NOT LEAVE BLANK LINES BETWEEN INSECTA KEYWORD ENTRIES

			DO NOT USE RESERVED CHARATERS OR KEYWORDS IN THE ENTRIES

			ONLY THE INSECTA OBJECT KEYS THAT HAVE AN '*' IN THE FIRST 
			COLUMN WILL BE USED DURING IMPORT PASTING.  ALL OTHERS WILL
			BE IGNORED.  THE '*' IN THE FIRST COLUMN WILL NOT SHOW UP ON
			THE MENUS

			TO SPECIFY A USER MENU COMMAND SPERATATE THE [...] COMMAND 
			LINE WITH A '|' AND THE FOLLOWING TEXT WILL BE DISPLAYED IN
			THE MENU. IF NO '|' IS FOUND, THE WHOLE COMMAND IS SHOWN IN
			THE MENU.  

			THE BUTTON COMMANDS DO NOT FUNCTION AS 'CONSOLE:' STARTERS
			USE THE 'CONSOLE:' DIRETIVE ONLY IN THE 'TOOLS' MENU

			USE OF THE '[' OR ']' IN THE COMMAND OR KEY SIF YOU NEED 
			THESE CHARATERS

			COMMANDS MUST ALL BE LESS THAN 200 CHARATERS!

			A BLOCK OF COMMENTS CAN BE STARTED USING THE  '[' AND  ']' SYMBOLS
			AS LONG AS YOU ALWAYS USE THEM AS ENCLOSING PAIRS. AND TERMINTE THE
			COMMENTS WITH []			





[] End Misc KeyFile Comments
[DEFAULT_EXTENSION]



