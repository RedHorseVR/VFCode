[POSTEXPORTCOMMAND]
CMD /C "mkdir <ExportFileName> & ECHO ... <ExportFileName> moveing to folder <ExportFileName>\... & MOVE <ExportFileName>.ino <ExportFileName>\ & TIMEOUT 2" 



[COMPILE_BUTTON]
"C:\Program Files\Arduino IDE\Arduino IDE.exe" <ExportFileName>/<ExportFileName>.ino

"E:\Users\luisr\AppData\Local\Programs\arduino-ide\Arduino IDE.exe"  <ExportFileName>/<ExportFileName>.ino

   "E:\Program Files (x86)\Arduino\arduino.exe"  <ExportFileName>.ino
   
   "<VFChooks>\VC98\link.bat " <ExportFileName>.   |Link
[RUN_BUTTON]

E:\WindowsApps\ArduinoLLC.ArduinoIDE_1.8.49.0_x86__mdqgnx93n4wtt\arduino.exe <ExportFileName>.ino


   "c:\Program Files (x86)\Arduino\arduino.exe"  <ExportFileName>.ino
run.bat    <ExportFileName>.exe   

[HELP_BUTTON]
explorer.exe   https://support.arduino.cc/hc/en-us




[HELP]
explorer.exe  https://support.arduino.cc/hc/en-us
explorer.exe https://randomnerdtutorials.com/getting-started-with-esp32/"  |ESP32 REF
explorer.exe  https://www.arduino.cc/reference/en/ |ARDUINO REF




[VARIABLES]
	int  i=10;
	float	
	double
	extern	
	inline
	void
	unsigned 
	union
	class	
	static
	char
	char c;
	char str[100];
	char *str1;
	char *tok;
	char *s=strrchr(buff,'.');
	int    i=0;
	int    j=0;
	float  f=0.0;
	double d=0.0;
	unsigned long L=0;
	unsigned int  K=0;
	char   buff[256];









[INPUT]
	::
	void main() {  $|$ } //end main()
	void   :: (){  $|$ }
	int    :: (){  $|$ return 1; }	
	char   :: (){  $|$ return 0; }
	float  :: (){  $|$ return (float)1.0; }
	double :: (){  $|$ return 1.0; }
	inline void   (){  $|$ }
	inline char   (){  $|$ }
	inline int    (){  $|$ return 1;}
	inline float  (){  $|$ return (float)1;}
	inline double (){  $|$ return 1.0;}
	CALLBACK DlgProc(HWND hDlg,UINT uMsg,WPARAM wParam,LPARAM lParam){  $|$ }
	public:
	private:
	protected:
	inline
	/* includes */
	/* defines */
	/* externals */
	/* prototypes */
	/* globals */
	/* end class */









[EVENT]
	class  {  		$|$ 	};   // end class
	inline void
	inline int
	inline double
	inline char 
	inline char *
	int array[10] = {
	int array[][] = {

	







[PROCESS]
	Serial.println("Hello World of Visual FlowCoder !\n");
	Serial.println( "%d Hello World of Visual FlowCode.\n\n", i );
	wsSerial.println(buff,"%d Hello World of Visual FlowCode.", i );
	MessageBox( NULL , buff , " VFC99 ", MB_OK);
	MessageBox( NULL , " Hello World of VIsual FlowCoder !", " VFC99 ", MB_OK);
	MessageBeep( MB_OK ); 
	MessageBeep( MB_ICONSTOP );  









[SET]
	*tok = NULL;
	i++;
	#define 
	#include ".h"
	#include "resource.h"
	#include <string.h>
	#include <stdlib.h>
	#include <stdio.h>
	#include <windows.h>
	#include <insecta.h>
	#include <ctype.h> 
	0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 
	1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 
	1 , 0 , 1 , 0 , 1 , 0 , 1 , 0 , 1 , 0 , 
	{
	}
	/*
	*/
  //-----------------------------------------------------------








[OUTPUT]
	#include  
	Serial.println("\n-------------------------------------\n");	
	Serial.println("\t=====\t");
	Serial.println("\n");
	Serial.println("No!\n");
	Serial.println("Yes!\n");  getchar();
	Serial.println("No!\n");  getchar();
	if ( DEBUG ){ Serial.println("\n>%s  %d",__FILE__,__LINE__); }
	Serial.println("\n>%s  line>%d",__FILE__,__LINE__); getchar();
	#define DEBUG    1









[LOOP]
while( ) {  		$|$ 	}
while( i -- ) { 	$|$ 	}
while( c!= EOF ) {  	$|$ 	}
while( str!='\0' ) {  	$|$ 	}
do{        		$|$ 	}while( i-- );
for( ){    		$|$ 	}
for(i=0; i<10; i++ ){  	$|$ 	} 









[LEND]
	}  // end while
	}while();
	}  // end for









[BRANCH]
	if( )  $|$ { $|$ }else{ $|$ }
	if( )  $|$ { $|$ }else if(  ) { $|$ }else{ $|$ }
	if( c!= EOF )  $|$ { $|$ }else{ $|$ }
	if( ) $|$ { $|$ }
	switch( ){ $|$ case : $|$ default: $|$ }
	switch(uMessage) { $|$case WM_INITDIALOG: $|$ case WM_COMMAND: $|$case WM_CLOSE: $|$ }
	switch(wParam) {   $|$ case ID_HELP_ABOUT: $|$ case IDCANCEL:   $|$ case IDOK:  $|$ }
	if( IsIconic( MainWindow ) ) $|$ { $|$ }else{ $|$ }
	#ifdef  $|$ #endif
	#ifndef $|$ #endif
	switch(uMessage) {
	switch(wParam) {
	switch(HIWORD(wParam)) {
	switch(LOWORD(wParam)) {
	class  MyClass { $|$ /* methods */ $|$ /* data */ $|$ }; /* end of class */









[PATH]
	{
	public:
	private:
	protected:
	case WM_CREATE:	
	case WM_PAINT:
	case WM_INITDIALOG:
	case ID_HELP_ABOUT:
	#else
	#else
	}else{
	}else   if(  ) {
	case IDCANCEL:
	case IDOK:
	case :
	case WM_COMMAND:
	case WM_NOTIFY:
	case WM_CLOSE:
	case WM_SIZE:
	default:
	/* methods */
	/* data */









[BEND]
	}
	#endif
	#endif
	$|$









[END]
	}; /* end of class */
	};
	}
	return c ;
	return 0;
	return 0; }
	return 1;
	return 1; }	
	return NULL;
	return NULL; }
	return '\0';
	return '\0'; }
	break;
	break; }
	return ;
	return ;}
	return (float)0.0; }
	return 0.0; }
	exit(0);
	public:
	protected:
	private:
	public:
	protected:
	private:
	inline


















[TOOLS]
VFCbrowse
"C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe" https://i2.wp.com/randomnerdtutorials.com/wp-content/uploads/2019/05/ESP8266-NodeMCU-kit-12-E-pinout-gpio-pin.png?ssl=1 |ESP8366 PINOUTS
"C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe"  https://www.arduino.cc/reference/en/ |ARDUINO REF



---------------------------SEPARATOR
<ExportFileName>.exe test.ins|Run
---------------------------SEPARATOR
  <VFCtool>  Run.ins   			|Run Settings
  <VFCtool>  c:\MSDEV\msdevLinkclib.ins   	|Linker Settings
  <VFCtool>  c:\MSDEV\COMPILE.INS  	|Compiler Settings
  Explorer.exe  				|VC6.0 directory
  c:\BCPro95\BCPRO.EXE			|Bounds Checker
---------------------------SEPARATOR
  PIPE.EXE dir				|Start Command Line Tool Pipe
  CONSOLE:   				|Start Console
  command.com				|DOS Shell
  CMD  					|NT Shell
  CONSOLE: DIR *.*











[CASE_SENSITIVE]
[MATCH_ORDER]
[COMMENTS]
//
;
[] Begin Misc KeyFile Comments
NOTE: This is set up to use the MS Visual C++ compiler version 6  installed in 
	
   C:\C:\Program Files\Microsoft Visual Studio\VC98\

For further information see the Custom Toolbar Options tab of this keyfile and examine the .bat files in:
    
<VFChooks>















[] End Misc KeyFile Comments
[DEFAULT_EXTENSION]

