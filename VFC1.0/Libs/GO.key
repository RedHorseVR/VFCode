[POSTEXPORTCOMMAND]
cmd /c docker cp hello.go  container:/go/hello.go

[COMPILE_BUTTON]
cmd /c ECHO "TIDY" & go mod tidy	&pause		|GO MOD TIDY


[BUILD_BUTTON] 
cmd /k ECHO "BUILDING ..." & GO build <ExportFileName>.go & dir *.exe & echo "RUNNING <ExportFileName>.exe..." & <ExportFileName>.exe |BUILD RUN .exe


[RUN_BUTTON]
   cmd /c ECHO "RUN" & go run <ExportFileName>.go & pause  |GO RUN <>

[HELP_BUTTON]   
"C:\Program Files (x86)\Google\Chrome\Application\chrome.exe" --profile-directory="Default" http://xahlee.info/golang/golang_system_call.html



[TOOLS]
CONSOLE:

cmd /c ECHO "INIT" & go mod init <ExportFileName>.go &pause |GO MOD INIT
---------------------------SEPARATOR
cmd /k ECHO "BUILD" & go build <ExportFileName>.go & dir *.exe |BUILD
cmd /k go mod init <ExportFileName>.go
cmd /k go mod tidy
"C:\Program Files\Notepad++\notepad++.exe" go.mod

VFCbrowse


---------------------------SEPARATOR
  CMD /K ECHO RUN ON TEST.TXT & <ExportFileName>.exe test.TXT|Run ON TEST.TXT

  <VFCtool>  Run.ins   			|CREATE  EDIT RUN.BAT FILE
  CMD /k RUN.BAT  			|EXECUTE RUN.BAT
---------------------------SEPARATOR
  CMD /C Explorer.exe  %GOPATH%			|GOPATH FOLDER
  CMD /C Explorer.exe  %GOPATH%\src		|GOPATH SRC FOLDER
---------------------------SEPARATOR
  CMD  					|CMD Shell

[HELP]
"C:\Program Files (x86)\Google\Chrome\Application\chrome.exe" --profile-directory="Default" https://go.dev/doc/
"C:\Program Files (x86)\Google\Chrome\Application\chrome.exe" --profile-directory="Default" https://go.dev/ref/spec
---------------------------SEPARATOR
"C:\Program Files (x86)\Google\Chrome\Application\chrome.exe" --profile-directory="Default"  https://pkg.go.dev/std
"C:\Program Files (x86)\Google\Chrome\Application\chrome.exe" --profile-directory="Default" 
"C:\Program Files (x86)\Google\Chrome\Application\chrome.exe" --profile-directory="Default" 
"C:\Program Files (x86)\Google\Chrome\Application\chrome.exe" --profile-directory="Default" 
---------------------------SEPARATOR
	"C:\Program Files (x86)\Google\Chrome\Application\chrome.exe" --profile-directory="Default" https://go.dev/doc/ |DOC
	"C:\Program Files (x86)\Google\Chrome\Application\chrome.exe" --profile-directory="Default"  https://go.dev/PLAY/ |PLAYGROUND
	"C:\Program Files (x86)\Google\Chrome\Application\chrome.exe" --profile-directory="Default" https://go.dev/ |GO HOME

	"C:\Program Files (x86)\Google\Chrome\Application\chrome.exe" --profile-directory="Default" https://go.dev/tour/welcome/1 |TOUR

[VARIABLES]
  array:= [ ] string {  }

[INPUT]
func
	func main() {  $|$ } //end main()

	func myfunc ( message string ){  $|$ }

	func myfunc ( n int ) ( string ){  $|$ return "hello"; }	
	public:
	private:
	protected:
	inline

[EVENT]
import
  	array:= [ ] string { $|$  }
	import ( 		$|$ 	)   

	import "fmt"
	package main

	inline int
	inline double
	inline char 
	inline char *
	int array[10] = {
	int array[][] = {

[PROCESS]
	printf("Hello World of Visual FlowCoder !\n");
	printf( "%d Hello World of Visual FlowCode.\n", i );
	wsprintf(buff,"%d Hello World of Visual FlowCode.", i );
	MessageBox( NULL , buff , " VFC99 ", MB_OK);
	MessageBox( NULL , " Hello World of VIsual FlowCoder !", " VFC99 ", MB_OK);
	MessageBeep( MB_OK ); 
	MessageBeep( MB_ICONSTOP );  

[SET]
	*tok = NULL;
	i++;

	0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 
	1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 
	1 , 0 , 1 , 0 , 1 , 0 , 1 , 0 , 1 , 0 , 
	{
	}
	/* =====================================================
	===================================================== */

[OUTPUT]
 
	fmt.Println( "Hello, World" );

	fmt.Println("No!\n");
	fmt.Println("Yes!\n");  getchar();
	fmt.Println("No!\n");  getchar();
	if ( DEBUG ){ fmt.Println("\n>%s  %d",__FILE__,__LINE__); }
	fmt.Println("\n>%s  line>%d",__FILE__,__LINE__); getchar();
	fmt.Println("------------------------")
	fmt.Print( " ... " )


[LOOP]
while
for
do

while( ) {  		$|$ 	}
while( i -- ) { 	$|$ 	}
while( c!= EOF ) {  	$|$ 	}
while( str!='\0' ) {  	$|$ 	}
do{        		$|$ 	}while( i-- );
for( ){    		$|$ 	}
for(int i=0; i<10; i++ ){  	$|$ 	} 

[LEND]
	}  // end while
	}while();
	}  // end for



[BRANCH]
if  {
switch
try
	try $|$ { $|$ }catch{ $|$ }
	if {  $|$  $|$ }else{ $|$ }
	if {  $|$  $|$ }else if(  ) { $|$ }else{ $|$ }
	if c!= EOF { $|$ $|$ }else{ $|$ }
	if( ) { $|$  $|$ }
	switch( ){ $|$ case : $|$ default: $|$ }
	switch(uMessage) { $|$case WM_INITDIALOG: $|$ case WM_COMMAND: $|$case WM_CLOSE: $|$ }
	switch(wParam) {   $|$ case ID_HELP_ABOUT: $|$ case IDCANCEL:   $|$ case IDOK:  $|$ }
	if( IsIconic( MainWindow ) ) $|$ { $|$ }else{ $|$ }
	#ifdef  $|$ #endif
	#ifndef $|$ #endif
	switch(uMessage) {
	switch(wParam) {
	switch(HIWORD(wParam)) {
	switch(LOWORD(wParam)) {
	class  MyClass { $|$ /* methods */ $|$ /* data */ $|$ }; /* end of class */


[PATH]
	{
	public:
	private:
	protected:
	case WM_CREATE:	
	case WM_PAINT:
	case WM_INITDIALOG:
	case ID_HELP_ABOUT:
	#else
	#else
	}else{
	}else   if(  ) {
	case IDCANCEL:
	case IDOK:
	case :
	case WM_COMMAND:
	case WM_NOTIFY:
	case WM_CLOSE:
	case WM_SIZE:
	default:
	/* methods */
	/* data */

[BEND]
	}
	#endif
	#endif
	$|$


[END]
	}; /* end of class */
	};
	}
	return c ;
	return 0;
	return 0; }
	return 1;
	return 1; }	
	return NULL;
	return NULL; }
	return '\0';
	return '\0'; }
	break;
	break; }
	return ;
	return ;}
	return (float)0.0; }
	return 0.0; }
	exit(0);
	public:
	protected:
	private:
	public:
	protected:
	private:
	inline


[CASE_SENSITIVE]
[MATCH_ORDER]
[COMMENTS]
//
;
[] Begin Misc KeyFile Comments
NOTE: This is set up to use the MS Visual C++ compiler version 6  installed in 
	
   C:\C:\Program Files\Microsoft Visual Studio\VC98\

For further information see the Custom Toolbar Options tab of this keyfile and examine the .bat files in:
    
     <VFCProgframDir>\VFChooks

















[] End Misc KeyFile Comments
[DEFAULT_EXTENSION]

